generator client {
  provider = "prisma-client-js"
}

//TODO add to env
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")

  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum GenderEnum {
  Male
  Female
}

enum JobTypeEnum {
  AVAILABLE_JOBS
  FREELANCE
}

enum CurrencyEnum {
  LBP
  USD
}

enum JobTimeEnum {
  FULL_TIME
  PART_TIME
}

enum RoleEnum {
  MEMBER
  ADMIN
}

model User {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  email          String    @unique
  username       String
  password       String?
  phone          String?
  dateOfBirth    DateTime?
  address        String?
  profilePicPath String?
  active         Boolean?  @default(false)

  verifyEmailToken    String?
  forgotPasswordToken String?

  googleId   String?
  facebookId String?

  role   RoleEnum    @default(MEMBER)
  gender GenderEnum?

  publishedJobs     Job[]
  publishedServices Service[]
}

model CompanyAd {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String?
  imagePath String
  website   String?
  active    Boolean  @default(true)
}

model Job {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String
  salary      Decimal? @db.Decimal(10, 2)
  description String?
  filePath    String?
  city        String?
  address     String?

  currency CurrencyEnum
  type     JobTypeEnum
  time     JobTimeEnum

  publisher   User @relation(fields: [publisherId], references: [id])
  publisherId Int
}

model Service {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String
  price       Decimal? @db.Decimal(10, 2)
  description String?
  city        String?
  address     String?

  currency CurrencyEnum

  files       File[]
  publisher   User   @relation(fields: [publisherId], references: [id])
  publisherId Int
}

model File {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  path      String

  service   Service? @relation(fields: [serviceId], references: [id])
  serviceId Int?
}
